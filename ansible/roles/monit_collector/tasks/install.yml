---
- name: Add user for monitoring soft
  user:
    name: "{{ monit_collector_monitoring_user }}"
    shell: /bin/bash

- name: Add group for node_exporter textfile directory
  group:
    name: "{{ monit_collector_textfile_group }}"

- name: "Create directory for node exporter files"
  file:
    dest: "{{ monit_collector_textfile_directory }}"
    state: directory
    mode: 0770
    owner: "{{ monit_collector_monitoring_user }}"
    group: "{{ monit_collector_textfile_group }}"

- name: "Create monit_collector log file"
  file:
    dest: "{{ monit_collector_log_file }}"
    state: touch
    mode: 0770
    modification_time: preserve
    access_time: preserve
    owner: root
    group: "{{ monit_collector_monitoring_user }}"

- name: Copy monit_collector
  copy:
    src: "monit_collector.py"
    dest: "{{ monit_collector_script_name }}"
    mode: 0750
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr != "systemd" and
        'monit_collector_binary' not in group_names
  notify: restart_init_service

- name: Copy monit_collector
  copy:
    src: "monit_collector.py"
    dest: "{{ monit_collector_script_name }}"
    mode: 0750
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr == "systemd" and
        'monit_collector_binary' not in group_names
  notify: restart_systemd_service

- name: Copy monit_collector binary
  copy:
    src: "monit_collector.py.bin"
    dest: "{{ monit_collector_script_name }}"
    mode: 0750
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr == "systemd" and
        'monit_collector_binary' in group_names
  notify: restart_systemd_service

- name: Copy monit_collector binary
  copy:
    src: "monit_collector.py.bin"
    dest: "{{ monit_collector_script_name }}"
    mode: 0750
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr != "systemd" and
        'monit_collector_binary' in group_names
  notify: restart_init_service

- name: Add monit collector config file
  template:
    src: "monit_collector.py.conf"
    dest: "/usr/local/bin/monit_collector.py.conf"
    mode: 0640
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr != "systemd" and
        'monit_collector_binary' not in group_names
  notify: restart_init_service

- name: Add monit collector config file
  template:
    src: "monit_collector.py.conf"
    dest: "/usr/local/bin/monit_collector.py.conf"
    mode: 0640
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr == "systemd" and
        'monit_collector_binary' not in group_names
  notify: restart_systemd_service

- name: Add monit collector config file
  template:
    src: "monit_collector.py.conf"
    dest: "/usr/local/bin/monit_collector.py.conf"
    mode: 0640
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr == "systemd" and
        'monit_collector_binary' in group_names
  notify: restart_systemd_service

- name: Add monit collector config file
  template:
    src: "monit_collector.py.conf"
    dest: "/usr/local/bin/monit_collector.py.conf"
    mode: 0640
    owner: root
    group: "{{ monit_collector_monitoring_user }}"
  when: ansible_service_mgr != "systemd" and
        'monit_collector_binary' in group_names
  notify: restart_init_service

- name: Copy monit_collector exception check sccript
  template:
    src: "check_monit_collector_exception.py"
    dest: "/usr/local/bin/check_monit_collector_exception.py"
    mode: 0750
    owner: root
    group: "{{ monit_collector_monitoring_user }}"

- name: Add collector stat file check script
  template:
    src: "scripts/monit_collector_alert.sh"
    dest: "/usr/local/bin/monit_collector_alert.sh"
    mode: 0750
    owner: root
    group: "{{ monit_collector_monitoring_user }}"

- name: Add monit check
  template:
    src: "monit.d/monit_collector.conf"
    dest: "/etc/monit.d/monit_collector.conf"
    mode: 0640
    owner: root
    group: root
  notify: monit_reload

- name: Copy monit_collector to non-systemd gentoo system
  template:
    src: "init.d/gentoo"
    dest: "/etc/init.d/monit_collector"
    mode: 0755
    owner: root
    group: root
  when: ansible_service_mgr != "systemd" and
        ansible_distribution == "Gentoo"
  notify: restart_init_service

- name: Copy monit_collector systemd system
  template:
    src: "systemd/monit_collector.service"
    dest: "/etc/systemd/system/monit_collector.service"
    mode: 0644
    owner: root
    group: root
  when: ansible_service_mgr == "systemd"
  notify: restart_systemd_service

- name: Copy monit_collector.stop to gentoo system
  template:
    src: "local.d/monit_collector.stop"
    dest: "/etc/local.d/monit_collector.stop"
    mode: 0755
    owner: root
    group: root
  when: ansible_service_mgr != "systemd" and
        ansible_distribution == "Gentoo"
  notify: restart_init_service

- name: Copy monit_collector.start to gentoo system
  template:
    src: "local.d/monit_collector.start"
    dest: "/etc/local.d/monit_collector.start"
    mode: 0755
    owner: root
    group: root
  when: ansible_service_mgr != "systemd" and
        ansible_distribution == "Gentoo"
  notify: restart_init_service

- name: Copy monit_collector to non-systemd amazon system
  template:
    src: "init.d/amazon"
    dest: "/etc/init.d/monit_collector"
    mode: 0755
    owner: root
    group: root
  when: ansible_service_mgr != "systemd" and
        ansible_distribution == "Amazon"
  notify: restart_amazon_service

- name: Copy monit_collector to non-systemd debian system
  template:
    src: "init.d/debian"
    dest: "/etc/init.d/monit_collector"
    mode: 0755
    owner: root
    group: root
  when: ansible_service_mgr != "systemd" and
        ansible_distribution == "Debian"
  notify: restart_debian_service

- name: Copy monit_collector to non-systemd ubuntu system
  template:
    src: "init.d/debian"
    dest: "/etc/init.d/monit_collector"
    mode: 0755
    owner: root
    group: root
  when: ansible_service_mgr != "systemd" and
        ansible_distribution == "Ubuntu"
  notify: restart_debian_service

- name: Start and Enable init.d service
  service:
    name: monit_collector
    enabled: yes
    state: restarted
  when: ansible_service_mgr != "systemd" and
        ansible_distribution != "Gentoo" and
        ansible_distribution != "Amazon"

- name: Start and Enable systemd service
  service:
    name: monit_collector
    enabled: yes
    state: started
  when: ansible_service_mgr == "systemd"

