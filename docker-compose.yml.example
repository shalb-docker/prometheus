version: '3'

services:
  prometheus-prod:
    image: prom/prometheus:v2.4.2
    volumes:
      - ./prometheus/configs:/etc/prometheus/
      - ./prometheus/storage:/prometheus
    restart: always
#   ports:
#     - "127.0.0.1:9090:9090"
    command: ["--log.level=debug",
              "--web.external-url=https://prometheus.{{ REMOTE_HOST }}/",
              "--config.file=/etc/prometheus/prometheus.yml",
              "--storage.tsdb.path=/prometheus",
              "--web.console.libraries=/usr/share/prometheus/console_libraries",
              "--web.console.templates=/usr/share/prometheus/consoles",
              "--storage.tsdb.retention=30d"]

  alertmanager:
    image: prom/alertmanager:v0.15.2
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
      - ./alertmanager/storage:/alertmanager
    restart: always
#   ports:
#     - "127.0.0.1:9093:9093"
    command: ["--log.level=debug",
              "--web.external-url=https://alertmanager.{{ REMOTE_HOST }}/",
              "--config.file=/etc/alertmanager/config.yml"]

  grafana:
    image: grafana/grafana:5.3.0
    volumes:
      - ./grafana/storage:/var/lib/grafana
    restart: always
#   ports:
#     - "127.0.0.1:3000:3000"
    env_file:
      - ./grafana/env
      - ./grafana/env_secrets

  node-exporter:
    image: prom/node-exporter:v0.18.1
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/host/root
    restart: always
#   ports:
#     - "127.0.0.1:9100:9100"
    command: ["--web.listen-address=0.0.0.0:9100",
              "--path.procfs=/host/proc",
              "--path.sysfs=/host/sys",
              "--path.rootfs=/host/root",
              "--collector.filesystem.ignored-mount-points=(/run/|/etc/|/dev/|/proc/|/sys/|/var/lib/docker/)",
              "--collector.filesystem.ignored-fs-types=(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|pocfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)"]

  nginx:
    image: artiloop/nginx-le-ssl
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/configs
      - ./nginx/ssl:/etc/nginx/ssl
    environment:
        DOMAINS_LIST: "alertmanager.{{ REMOTE_HOST }},prometheus.{{ REMOTE_HOST }},grafana.{{ REMOTE_HOST }}"
    depends_on:
      - prometheus
      - alertmanager
      - grafana
    restart: always
    ports:
      - "80:80"
      - "443:443"

# nginx:
#   image: nginx:1.15
#   volumes:
#     - ./nginx/conf.d:/etc/nginx/conf.d/
#     - ./nginx/ssl:/etc/nginx/ssl
#   depends_on:
#     - prometheus
#     - alertmanager
#     - grafana
#   restart: always
#   ports:
#     - "80:80"
#     - "443:443"

  postfix-relay:
    image: shalb/postfix-relay:0.0.1
    volumes:
      - ./postfix-relay/main.cf:/etc/postfix/main.cf
   #  - ./postfix-relay/var/spool/postfix:/var/spool/postfix
   #  - ./postfix-relay/var/spool/mail:/var/spool/mail
    restart: always
    ports:
      - "127.0.0.1:25:25"

# cloudwatch-exporter_prod:
#   image: prom/cloudwatch-exporter:cloudwatch_exporter-0.5.0
#   volumes:
#     - ./cloudwatch-exporter_prod/config.yml:/config/config.yml
#   restart: always
#  #ports:
#  #  - "9106:9106"
#   env_file:
#     - ./cloudwatch-exporter_prod/env_secrets

# postgres_exporter_prod:
#   image: wrouesnel/postgres_exporter:v0.4.7
#   volumes:
#     - ./postgres_exporter_prod/queries.yml:/queries.yml
#   restart: always
#  #ports:
#  #  - "127.0.0.1:9187:9187"
#   env_file:
#     - ./postgres_exporter_prod/env
#     - ./postgres_exporter_prod/env_secrets

# redis_exporter_prod:
#   image: oliver006/redis_exporter:v0.33.0
#   restart: always
#   env_file:
#     - ./redis_exporter_prod/env_secrets

