# my global config
global:
  scrape_interval:     10s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 10s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
# - "/etc/prometheus/alert_rules.d/prometheus.yml"
# - "/etc/prometheus/alert_rules.d/cron.yml"
# - "/etc/prometheus/alert_rules.d/disk.yml"
# - "/etc/prometheus/alert_rules.d/http.yml"
# - "/etc/prometheus/alert_rules.d/mail.yml"
# - "/etc/prometheus/alert_rules.d/memory.yml"
# - "/etc/prometheus/alert_rules.d/monit.yml"
  - "/etc/prometheus/alert_rules.d/node_exporter.yml"
# - "/etc/prometheus/alert_rules.d/nproc.yml"
# - "/etc/prometheus/alert_rules.d/time_sync.yml"
# - "/etc/prometheus/alert_rules.d/la.yml"
# - "/etc/prometheus/alert_rules.d/redis_exporter.yml"
# - "/etc/prometheus/alert_rules.d/elasticsearch.yml"
# - "/etc/prometheus/alert_rules.d/monit_collector.yml"
# - "/etc/prometheus/alert_rules.d/processes.yml"
# - "/etc/prometheus/alert_rules.d/monit_program.yml"
# - "/etc/prometheus/alert_rules.d/remote_host.yml"
# - "/etc/prometheus/alert_rules.d/postgres_exporter.yml"
# - "/etc/prometheus/alert_rules.d/proxysql_exporter.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
# get prometheus metrics
  - job_name: 'prometheus local'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
      - targets: ['prometheus:9090']
        labels:
          host_priority: 'P5'

# get grafana metrics
  - job_name: 'grafana local'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          host_priority: 'P5'

# get alertmanager metrics
  - job_name: 'alertmanager local'
    static_configs:
      - targets: ['alertmanager:9093']
        labels:
          host_priority: 'P5'

# get docker localhost metrics
# - job_name: 'docker local'
#   static_configs:
#     - targets: ['grafana.local.my_domain.com:9323']
#       labels:
#         host_priority: 'P5'

# get node_exporter localhost metrics
# - job_name: 'node_exporter local'
#   params:
#     collect[]:
#     - stat
#     - diskstats
#     - cpu
#     - filesystem
#     - loadavg
#     - meminfo
#     - netstat
#     - textfile
#     - timex
#     - vmstat
#   static_configs:
#     - targets: ['grafana.local.my_domain.com:9100']
#       labels:
#         host_priority: 'P5'
#   relabel_configs:
#   - source_labels: [__address__]
#     regex: '(.*):[0-9]+'
#     target_label: hostname
#     replacement: '$1'


# node_exporter with limited collectors, "hostname" and "host_priority" labels
  - job_name: 'node_exporter prod'
    params:
      collect[]:
      - stat
      - diskstats
      - cpu
      - filesystem
      - loadavg
      - meminfo
      - netstat
      - textfile
      - timex
      - vmstat
    static_configs:
      - targets:
        - 'host-1.example.com:9100'
        - 'host-2.example.com:9100'
        labels:
          host_priority: 'P1'
    relabel_configs:
    - source_labels: [__address__]
      regex: '(.*):[0-9]+'
      target_label: hostname
      replacement: '$1'


# node_exporter with limited collectors and per host labels without dns
  - job_name: 'node_exporter prod'
    params:
      collect[]:
      - stat
      - diskstats
      - cpu
      - filesystem
      - loadavg
      - meminfo
      - netstat
      - textfile
      - timex
      - vmstat
    static_configs:
      - targets: ['127.0.0.1:9100']
        labels:
          host_priority: 'P5'
          project: 'my_project'
          hostname: 'tst-1.example.local'
      - targets: ['127.0.0.1:9100']
        labels:
          host_priority: 'P5'
          project: 'my_project'
          hostname: 'tst-2.example.local'


# mysqld_exporter with limited collectors and metrics, "hostname" and "host_priority" labels
  - job_name: 'mysqld_exporter prod'
    params:
      collect[]:
      - global_status
      - global_variables
    metric_relabel_configs:
      - source_labels: [ __name__ ]
        regex: 'mysql_up|mysql_exporter_last_scrape_error|mysql_global_variables_max_connections|mysql_global_status_threads_connected'
        action: keep
    static_configs:
      - targets: ['host-1.example.com:9104']
        labels:
          host_priority: 'P3'

# postgres exporter with custom queries and custom scrape interval
  - job_name: 'postgres_exporter_custom_metrics'
    scrape_interval: 5m
    static_configs:
      - targets:
        - 'postgres_exporter_myenv_myinstance_mydb:9187'
        labels:
          host_priority: 'P5'
    metric_relabel_configs:
      - source_labels: [ __name__ ]
        regex: 'count_on_tables_count'
        action: keep

# AWS EC2 autodiscovery example
  - job_name: 'ec2 infra'
    ec2_sd_configs:
      - region: us-west-2
        access_key: 00000000000000000000
        secret_key: 0000000000000000000000000000000000000000
        refresh_interval: 120s
        port: 9100
    relabel_configs:
      - source_labels: [__meta_ec2_tag_MAINTAINER]
        regex: 'Shalb|Dev'
        action: keep
      - source_labels: [__meta_ec2_instance_id]
        target_label: instance_id
      - source_labels: [__meta_ec2_instance_type]
        target_label: instance_type
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
        regex: 'infra\-(.*)'
        replacement: '$1.infra.aws.example.com:9100'
      - source_labels: [__meta_ec2_tag_APP_NAME]
        target_label: app_name
      - source_labels: [__meta_ec2_tag_AWS_ACCOUNT]
        target_label: aws_account
      - source_labels: [__meta_ec2_tag_MAINTAINER]
        target_label: maintainer
      - source_labels: [__meta_ec2_tag_RESOURCE_NAME]
        target_label: resource_name
      - source_labels: [__meta_ec2_tag_ROLE]
        target_label: role
      - source_labels: [__meta_ec2_tag_SERVER_ENV]
        target_label: server_env
      - source_labels: [__meta_ec2_tag_CREATOR]
        target_label: creator
      - source_labels: [__meta_ec2_tag_DOMAIN]
        target_label: domain

